# -*-mode: apache;-*-
<IfModule mod_expires.c>
    ExpiresActive On
    ExpiresByType image/jpeg "access plus 1 week"
    ExpiresByType image/png "access plus 1 week"
</IfModule>

    RewriteEngine on
    # For developers wanting to debug the rewrite rules
    #RewriteLogLevel 9
    #RewriteLog /tmp/rewrite.log

    # Redirect to the Libravatar homepage
    RewriteRule  ^/$ http://__WWWSERVERNAME__ [last,redirect]

    # Remove extensions from filenames
    RewriteRule ^/avatar/([0-9a-f]{32,64})\..*$ /avatar/$1 [next]

    # Pull the size out of the query string and into a subdirectory
    RewriteCond %{QUERY_STRING} ^((?:.*&)?)s(?:ize)?=([0-9]+)((?:&.*)?)$
    RewriteRule ^/avatar/([0-9a-f]{32,64})$ /avatar/%2/$1?%1%3 [next]

    # Add a default size of 80 if it's missing
    RewriteCond %{QUERY_STRING} !^((?:.*&)?)s(?:ize)?=([0-9]+)((?:&.*)?)$
    RewriteRule ^/avatar/([0-9a-f]{32,64})$ /avatar/80/$1 [next]

    # Queries which include a domain need to go to the Django resolver
    RewriteCond %{QUERY_STRING} ^(?:.*&)?domain=([^&]+)(?:&.*)?$
    RewriteRule ^/avatar/([0-9]+)/([0-9a-f]{32,64})$ http://__WWWSERVERNAME__/resolve?email_hash=$2&size=$1 [qsappend,redirect,last]

    # Serve the file if it exists
    RewriteCond  /var/lib/libravatar%{SCRIPT_FILENAME} -f
    RewriteRule ^/avatar/([0-9]+)/([0-9a-f]+)$ /avatar/$1/$2 [passthrough]

    # If the requested size is not available but another is, go to the Django resizer
    RewriteCond %{SCRIPT_FILENAME} ^/avatar/([0-9]+)/([0-9a-f]{32,64})$
    RewriteCond /var/lib/libravatar/avatar/%2 -f
    RewriteRule ^/avatar/([0-9]+)/([0-9a-f]{32,64})$ http://__WWWSERVERNAME__/resize?email_hash=$2&size=$1 [redirect,last]

    # Delegate md5-hashed files that don't exist to Gravatar
    RewriteCond %{HTTPS} off
    RewriteCond %{QUERY_STRING} ^(?:.*&)?d(?:efault)?=([^&]+)(?:&.*)?$
    RewriteCond %1 !^(identicon|monsterid|wavatar|mm)$
    RewriteRule  ^/avatar/([0-9]+)/([0-9a-f]{32})$ http://www.gravatar.com/avatar/$2.jpg?r=g&s=$1&d=%1 [last,redirect,noescape]

    RewriteCond %{HTTPS} off
    RewriteRule  ^/avatar/([0-9]+)/([0-9a-f]{32})$ http://www.gravatar.com/avatar/$2.jpg?r=g&s=$1&d=http://%{SERVER_NAME}/nobody.png  [last,redirect]

    RewriteCond %{HTTPS} on
    RewriteCond %{QUERY_STRING} ^(?:.*&)?d(?:efault)?=([^&]+)(?:&.*)?$
    RewriteCond %1 !^(identicon|monsterid|wavatar|mm)$
    RewriteRule  ^/avatar/([0-9]+)/([0-9a-f]{32})$ https://secure.gravatar.com/avatar/$2.jpg?r=g&s=$1&d=%1 [last,redirect,noescape]

    RewriteCond %{HTTPS} on
    RewriteRule  ^/avatar/([0-9]+)/([0-9a-f]{32})$ https://secure.gravatar.com/avatar/$2.jpg?r=g&s=$1&d=https://%{SERVER_NAME}/nobody.png  [last,redirect]

    # Easter egg
    RewriteRule ^/avatar/deadbeef\.? %{DOCUMENT_ROOT}/deadbeef.png [last]

    # File not found (with a "default" parameter)
    RewriteMap url_decode int:unescape

    RewriteCond %{QUERY_STRING} ^(?:.*&)?d(?:efault)?=([^&]+)(?:&.*)?$
    RewriteCond %1 !^(identicon|monsterid|wavatar|mm|404)$
    RewriteRule ^/avatar/ ${url_decode:%1}? [last,redirect]

    RewriteCond %{QUERY_STRING} ^(?:.*&)?d(?:efault)?=404(?:&.*)?$
    RewriteRule ^/avatar/ - [last]

    # File not found
    RewriteRule ^/avatar/([0-9]+)/ %{DOCUMENT_ROOT}/nobody/$1.png [last]
    RewriteRule ^/avatar/ %{DOCUMENT_ROOT}/nobody/80.png [last]
