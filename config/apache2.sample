# -*-mode: apache;-*-
<VirtualHost *:80>
    ServerName static.libravatar.org
    ServerAlias www.libravatar.org
    ServerAdmin webmaster@localhost
    DocumentRoot /home/francois/devel/remote/libravatar/static

    Alias /avatar /home/francois/devel/remote/libravatar/avatar

    # For secure SSL-based servers
    #SSLEngine on
    #SSLCertificateFile    /etc/apache2/ssl/secure.libravatar.org.pem

    RewriteEngine on
    # For developers wanting to debug the rewrite rules
    #RewriteLogLevel 9
    #RewriteLog /tmp/rewrite.log

    # Remove extensions from filenames
    RewriteRule ^/avatar/([0-9a-f]{32,64})\..*$ /avatar/$1 [next]

    # Pull the size out of the query string and into a subdirectory
    RewriteCond %{QUERY_STRING} ^((?:.*&)?)s(?:ize)?=([0-9]+)((?:&.*)?)$
    RewriteRule ^/avatar/([0-9a-f]{32,64})$ /avatar/%2/$1?%1%3 [next]

    # Add a default size of 80 if it's missing
    RewriteCond %{QUERY_STRING} !^((?:.*&)?)s(?:ize)?=([0-9]+)((?:&.*)?)$
    RewriteRule ^/avatar/([0-9a-f]{32,64})$ /avatar/80/$1 [next]

    # Queries which include a domain need to go to the Django resolver
    RewriteCond %{QUERY_STRING} ^(?:.*&)?domain=([^&]+)(?:&.*)?$
    RewriteRule ^/avatar/([0-9]+)/([0-9a-f]{32,64})$ http://localhost:8000/resolve?email_hash=$2&size=$1 [qsappend,redirect,last]

    # Serve the file if it exists
    RewriteCond  /home/francois/devel/remote/libravatar%{SCRIPT_FILENAME} -f
    RewriteRule ^/avatar/([0-9]+)/([0-9a-f]+)$ /avatar/$1/$2 [passthrough]

    # If the requested size is not available but another is, go to the Django resizer
    RewriteCond %{SCRIPT_FILENAME} ^/avatar/([0-9]+)/([0-9a-f]{32,64})$
    RewriteCond /home/francois/devel/remote/libravatar/avatar/%2 -f
    RewriteRule ^/avatar/([0-9]+)/([0-9a-f]{32,64})$ http://localhost:8000/resize?email_hash=$2&size=$1 [redirect,last]

    # Delegate md5-hashed files that don't exist to Gravatar
    RewriteCond %{HTTPS} off
    RewriteCond %{QUERY_STRING} ^(?:.*&)?d(?:efault)?=([^&]+)(?:&.*)?$
    RewriteCond %1 !^(identicon|monsterid|wavatar|mm)$
    RewriteRule  ^/avatar/([0-9]+)/([0-9a-f]{32})$ http://www.gravatar.com/avatar/$2.jpg?r=g&s=$1&d=%1 [last,redirect,noescape]

    RewriteCond %{HTTPS} off
    RewriteRule  ^/avatar/([0-9]+)/([0-9a-f]{32})$ http://www.gravatar.com/avatar/$2.jpg?r=g&s=$1&d=http://%{SERVER_NAME}/img/nobody.png  [last,redirect]

    RewriteCond %{HTTPS} on
    RewriteCond %{QUERY_STRING} ^(?:.*&)?d(?:efault)?=([^&]+)(?:&.*)?$
    RewriteCond %1 !^(identicon|monsterid|wavatar|mm)$
    RewriteRule  ^/avatar/([0-9]+)/([0-9a-f]{32})$ https://secure.gravatar.com/avatar/$2.jpg?r=g&s=$1&d=%1 [last,redirect,noescape]

    RewriteCond %{HTTPS} on
    RewriteRule  ^/avatar/([0-9]+)/([0-9a-f]{32})$ https://secure.gravatar.com/avatar/$2.jpg?r=g&s=$1&d=https://%{SERVER_NAME}/img/nobody.png  [last,redirect]

    # Uploaded images
    # TODO: RewriteCond %{HTTP_REFERER} ^http://www.libravatar.org/
    RewriteRule ^/avatar/uploaded/([0-9a-f]+\.(jpg|png))$ /avatar/uploaded/$1 [passthrough]

    # Easter egg
    RewriteRule ^/avatar/deadbeef\.? %{DOCUMENT_ROOT}/img/deadbeef.png [last]

    # File not found (with a "default" parameter)
    RewriteMap url_decode int:unescape

    RewriteCond %{QUERY_STRING} ^(?:.*&)?d(?:efault)?=([^&]+)(?:&.*)?$
    RewriteCond %1 !^(identicon|monsterid|wavatar|mm|404)$
    RewriteRule ^/avatar/ ${url_decode:%1}? [last,redirect]

    RewriteCond %{QUERY_STRING} ^(?:.*&)?d(?:efault)?=404(?:&.*)?$
    RewriteRule ^/avatar/ - [last]

    # File not found
    RewriteRule ^/avatar/([0-9]+)/ %{DOCUMENT_ROOT}/img/nobody/$1.png [last]
    RewriteRule ^/avatar/ %{DOCUMENT_ROOT}/img/nobody/80.png [last]

    <Directory />
        Options FollowSymLinks
        AllowOverride None
    </Directory>
    <Directory /home/francois/devel/remote/libravatar/avatar>
        DefaultType image/jpeg
        Options FollowSymLinks MultiViews
        AllowOverride None
        Order allow,deny
        allow from all
    </Directory>

    ErrorLog /var/log/apache2/error.log
    LogLevel info
    CustomLog /var/log/apache2/access.log combined

</VirtualHost>
