External dependencies
----------------------

- Python 2.6
- Django 1.2
- Apache 2 with mod_rewrite
- Python DNS 2.3.4
  (http://pydns.sourceforge.net/)
- jQuery 1.4

(optional, if using LDAP authenticaion):

- Python LDAP library

On Debian unstable:

  apt-get install python-django apache2-mpm-prefork python-dns libjs-jquery python2.6
  
  apt-get install python-ldap


Apache Configuration
---------------------

Start by adding this to your /etc/hosts:

  127.0.0.1 static.libravatar.org www.libravatar.org

Then copy config/apache2.sample to /etc/apache2/sites-enabled/ and restart
Apache using "/etc/init.d/apache2 restart".


Starting the Django server:
----------------------------

In your project directory (e.g. /home/francois/devel/libravatar/), create the
initial database:

  cd libravatar
  python manage.py syncdb

then run the Django server:

  python manage.py runserver

and finally browse to http://localhost:8000 to use the site.

Note that you will need to adjust a few paths in libravatar/settings.py in the
(highly likely) case that you're not using the same working directory as me.

Authenticating with an external LDAP server:
---------------------------------------------

Download and install the Django LDAP authentication backend. This is a BSD-
licensed module written by Peter Sagerson:

http://packages.python.org/django-auth-ldap/

The module can be checked out and installed as follows:

   hg clone http://bitbucket.org/psagers/django-auth-ldap
   sudo easy_install django-auth-ldap

Then uncomment the LDAP backend line in AUTHENTICATION_BACKENDS in your
settings.py and set your AUTH_LDAP_SERVER_URI and AUTH_LDAP_USER_DN_TEMPLATE
settings to something appropriate. More complex setups are also well documented
in the package documentation.

