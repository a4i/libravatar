External dependencies
----------------------

- Python 2.6
- Django 1.2
- Apache 2 with:
  - mod_alias
  - mod_expires
  - mod_headers
  - mod_rewrite
- Python DNS 2.3.4
  (http://pydns.sourceforge.net/)
- jQuery 1.4
- Python Imaging Library
  (http://www.pythonware.com/library/)
- YUI Compressor, for minifying CSS/JS files
  (http://developer.yahoo.com/yui/compressor/)
- Gearman (http://www.gearman.org)
- Python bindings for libgearman
  (http://www.launchpad.net/gearman-interface)

(optional, if using LDAP authenticaion):

- Python LDAP library

On Debian unstable:

  apt-get install python-django apache2-mpm-prefork python-dns libjs-jquery python2.6 python-imaging libapache2-mod-wsgi python-psycopg2 yui-compressor gearman-job-server gearman-tools python-gearman.libgearman
  
  apt-get install python-ldap


Create your database
---------------------

Create a database user:

  sudo -u postgres createuser djangouser

Create a database:

  sudo -u postgres createdb -O djangouser libravatar


Apache Configuration
---------------------

Start by adding this to your /etc/hosts:

  127.0.0.1 www.libravatar.org secure.libravatar.org cdn.libravatar.org seccdn.libravatar.org

Enable mod_alias, mod_expires, mod_headers, mod_rewrite and mod_wsgi:

  a2enmod alias
  a2enmod expires
  a2enmod headers
  a2enmod rewrite
  a2enmod wsgi

Create a uploaded/ and user/ directories that are writable by the www-data user:

  mkdir /var/lib/libravatar/uploaded
  mkdir /var/lib/libravatar/user
  sudo chgrp www-data /var/lib/libravatar/uploaded
  sudo chgrp www-data /var/lib/libravatar/user
  sudo chmod g+w /var/lib/libravatar/uploaded
  sudo chmod g+w /var/lib/libravatar/user

Similarly, an avatar/ directory that's writable by the www-data user:

  mkdir /var/lib/libravatar/avatar
  sudo chgrp www-data /var/lib/libravatar/avatar
  sudo chmod g+w /var/lib/libravatar/avatar

Then copy config/*.conf to /etc/apache2/sites-enabled/, adjust the
path to the cdn-common include file and restart Apache using:

  apache2ctl configtest
  apache2ctl restart


Gearman jobs
-------------

Two gearman jobs must be running to fully take care of photo cropping and
resizing. Here are the two Gearman functions:

  cropresize: must run under a user that has read access to /uploaded and
              write access to /ready
  ready2user: must run under a user with read access to /ready and write
              access to /uploaded and /user

There are python scripts under libravatar/ for both functions and workers
can be setup like this:

  gearman -w -f cropresize libravatar/cropresize.py
  gearman -w -f ready2user libravatar/ready2user.py


Cron job
---------

You should have a daily cron job which does the following:

- delete old sessions
- delete old uploaded (i.e. non-cropped) files

Have a look in debian/libravatar-www.cron.daily for an example.


Authenticating with an external LDAP server:
---------------------------------------------

Download and install the Django LDAP authentication backend. This is a BSD-
licensed module written by Peter Sagerson:

http://packages.python.org/django-auth-ldap/

The module can be checked out and installed as follows:

   hg clone http://bitbucket.org/psagers/django-auth-ldap
   sudo easy_install django-auth-ldap

Then uncomment the LDAP backend line in AUTHENTICATION_BACKENDS in your
settings.py and set your AUTH_LDAP_SERVER_URI and AUTH_LDAP_USER_DN_TEMPLATE
settings to something appropriate. More complex setups are also well documented
in the package documentation.

