Branding/homepage:
- add an abuse form for reporting inappropriate content to abuse@
- make a collage of the user photos in the shape of libravatar logo
   (the ones licensed under Creative Commons)
- document the Libravatar API
- come up with terms and conditions?
- write a comparison table of Libravatar & Gravatar features

Promotion (when we're ready):
- announce on autonomo.us list
- add to http://wiki.debian.org/FreedomBox/LeavingTheCloud
- post presentation audio and slides on blog/slideshare? (after LCA)
- create Freshmeat account (once there's a first release)

Apache config:
- enforce referer of www.libravatar.org on /uploaded/* and /user/*
- support dynamic resizing of images delivered over https
- split apps between secure (account) and www (public and tools)

Federation:
- ability to specify both http and https servers in SRV records
   https://secure.wikimedia.org/wikipedia/en/wiki/SRV_record
- when adding an email address, check if the domain is controlled
   by another avatar server elsewhere
- add a restriction on the domain name for new email addresses
- write a Perl library for doing the DNS lookup before using
   libravatar.org (http://search.cpan.org/dist/Template-Plugin-Gravatar/)
- document the protocol and register on http://www.dns-sd.org/ServiceTypes.html
- create a test avatars.catalyst.net.nz server 
- create a test mugshots.debian.net server with db.people.org auth
   http://liw.iki.fi/liw/log/2006-11.html#20061127b
   http://www.mail-archive.com/debian-project@lists.debian.org/msg00572.html
- add the ability for private/public images for each email address
   (i.e. internal images only displayed within company subnet)
- create a pool of servers to serve libravatar.org (cdn-like)
   maybe using MirrorBrain (http://mirrorbrain.org/)

Ties to other free network services:
- adbard.net support
- faif version of Google Analytics (http://blog.taragana.com/index.php/archive/httpblogtaraganacomindexphparchivetop-10-web-log-analysis-software/) like Piwik

Storage:
- use git-like directories (first two hash characters is dirname)
- write an S3 backend
- write a file backend on a different server

Queuing:
- maybe use celeryproject.org (Django decorator) or Gearman
- image optimisation/resizing/copying to happen via workers so that it
   can be scaled easily as demand increases

Content licensing:
- have a checkbox for "this image is CC-BY-SA" and a "different
   license" link (should we support "all rights reserved"?)
- licenses can be specified by clients like the G/PG/X Gravatar
   ratings and an image is hardlinked into all of the directories that
   make sense for the license (e.g. CC-BY is also in CC-SA and CC-ND)
- or perhaps licensing should be embedded into the files as EXIF comments
   (http://q-funk.blogspot.com/2010/08/batch-editing-exif-data-to-add.html)
- or another idea is to have /avatar/HASH.json include metadata

Image resizing:
- when writing a resized image, create hardlinks to all hashes by
   looking up the inode number of the md5 using "ls -i" then finding
   the sha1 and sha256 using "find -mount -inum xxxxx"

Image optimisations:
- run jpegoptim or optipng on images

User sovereignty:
- "export my data" which uuencodes photos to XML along with email
   addresses
- "import my data" for moving between libravatar.org instances (email
   addresses will need to be re-validated presumably)

Admin:
- CLI admin interface using Commandant (https://launchpad.net/commandant)
- control page to lookup images/profiles based on a hash
- ability to disable a profile (which deletes all email -> photo associations)

Images:
- sanity checks for uploaded images (to make sure it's a valid jpeg/png)
- image importer from gpg key servers for embedded photos
- image importer for Twitter and Launchpad (need to specify username)
- URL image downloader/importer
- provide a gallery of built-in images, like these ones:
   http://www.isity.net/blog/?p=65
- implement unique wavatar-like images so that people without a photo
   don't all look the same

Plugins/hooks:
- rss feeds to see when a user (based on sha256 hash) changes photos
- plugins for FOSS programs: StatusNet, Mahara, Launchpad, Wordpress,
   Drupal, Django, Moodle, Koha, ikiwiki, wikkid, Thunderbird
   (https://addons.mozilla.org/en-US/thunderbird/addon/58034/)
   and pfaces (https://projects.pekdon.net/projects/pfaces)
- greasemonkey script to convert gravatar URLs to libravatar.org
- gnus (http://julien.danjou.info/blog/index.html#Gnus_and_Gravatar_support)
- use Facebook / Twitter API to change profile pictures there too

General Django app:
- set the keyboard focus on the default field of each form
- internationalization of the Django UI and localization to French
   (then add the templates to Launchpad to be widly translated)

Secure image uploading:
- upload image to temp dir
- crop/resize and move somewhere else (delete old non-cropped images on cron)
- restrict serving both images to authenticated uploader
- put the image into an "incoming" folder (/var/spool/libravatar?)
- run optimisers/resizers as restricted UNIX user and then move image
   to a different "ready" folder
- finally the web server takes it from there and copies it to the
   apache docroot where it's served from

Sysadmin stuff:
- use Puppet for all server config
- monitor server with Nagios
- monitor gearman queues (http://labs.consol.de/nagios/mod-gearman/)
